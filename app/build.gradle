apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'



android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.viking.vikingdemo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }


    //签名配置
    signingConfigs {
        release {
            //别名
            keyAlias project.DemoAPP_ALAIS
            keyPassword project.DemoAPP_PSW
            //路径
            storeFile getMyStoreFile()
            storePassword project.DemoAPP_STORE_PSW
            v1SigningEnabled true //对JAR签名
            v2SigningEnabled true //对APK签名
        }

        debug {
            //别名
            keyAlias project.DemoAPP_ALAIS
            keyPassword project.DemoAPP_PSW
            //路径
            storeFile getMyStoreFile()
            storePassword project.DemoAPP_STORE_PSW
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name != 'debug') {
                def fileName
                def outDirectory = "/apks"

                if ("true" == project.IS_JENKINS) {
                    fileName = "demo-v" + defaultConfig.versionCode + "-release-jenkins(${defaultConfig.versionCode}).apk"
                } else {
                    fileName = "demo-v" + defaultConfig.versionCode + "-release(${defaultConfig.versionCode}).apk"
                }
                variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + outDirectory)
                output.outputFileName = fileName
            }
        }
    }

}

ext {}

/**
 * 获取key路径，创建一份方法来获取key文件路径，jenkins和studio中可使用不同的路径
 * @return
 */
def getMyStoreFile() {
    return file(project.DemoAPP_KEYSTORE)
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation project(':support')
}
